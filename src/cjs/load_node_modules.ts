import { join } from "../../deps.ts";
import { loadAsFile } from "./load_file.ts";
import { loadPackageExports } from "./load_package_exports.ts";
import { loadAsDirectory } from "./load_as_directory.ts";
import type { Context, LoadResult } from "./types.ts";

export async function loadNodeModules(
  packageURL: URL,
  subpath: `.${string}`,
  context: Pick<Context, "conditions" | "mainFields">,
): Promise<LoadResult | false | undefined> {
  const exportsResult = await loadPackageExports(packageURL, subpath, context);
  if (exportsResult) return exportsResult;

  const url = join(packageURL, subpath);
  const loadResult = await loadAsFile(url);
  if (loadResult) return loadResult;

  const dirResult = await loadAsDirectory(url, context);
  if (dirResult || dirResult === false) return dirResult;
}
